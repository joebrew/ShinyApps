{
    "contents" : "\n# This is the server logic for a Shiny web application.\n# You can find out more about building applications with Shiny here:\n#\n# http://shiny.rstudio.com\n#\n\nlibrary(shiny)\n\nshinyServer(function(input, output) {\n  \n  source(\"farmers.R\")\n  \n  ########\n  mydata <- reactive({\n    farm[which(farm$month == input$month),]\n  })\n  \n  \n  ########\n  mydata_goodcolumns <- reactive({\n    farm2[which(farm2$month == input$month),]\n  })\n  \n\n\n  ############\n  output$plot1 <- renderPlot({\n    par(mfrow=c(1,2))\n    \n    if(nrow(mydata()) > 0){\n      \n      mycols <- adjustcolor(colorRampPalette(brewer.pal(8, \"Dark2\"))(nrow(mydata())), alpha.f=0.8)\n      \n      map(\"county\", \"fl\", fill=TRUE, col=\"grey\", border=\"white\")\n      \n      for(i in 1:nrow(mydata())){\n        points(mydata()$lon[i], mydata()$lat[i], \n               col=mycols[i],\n               pch=16)\n      }\n      \n      barplot(1:10, col=\"white\", border=\"white\", xlab=NA, ylab=NA, xaxt=\"n\", yaxt=\"n\")\n      legend(\"center\", col=mycols, pch=16, border=FALSE, bty=\"n\",\n             legend=mydata()$Farm.name., cex=0.7, pt.cex=1.5,\n             ncol=2)\n   }else{\n     barplot(1:10, col=\"white\", border=\"white\", xlab=NA, ylab=NA, xaxt=\"n\", yaxt=\"n\")\n     text(5,5, labels=\"No data collected this month\")\n   }\n    \n\n  })\n  \n  ############\n  output$plot2 <- renderPlot({\n    \n    if(nrow(mydata()) > 0){\n      \nbarplot(1:10)\ntext(x=4, y=5, labels=\"this plot is just a \\n placeholder\")\n\n    }else{\n      plot(1:10, 1:10, type=\"n\", xlab=NA, ylab=NA, xaxt=\"n\", yaxt=\"n\")\n      text(5,5, labels=\"No data collected this month\")\n    }\n    \n    \n  })\n\n\n############\noutput$plot3 <- renderPlot({\n  par(mfrow=c(1,1))\n  par(mar=c(0,0,0,0))\n  par(oma=c(0,0,0,0))\n    \n    #mycols <- adjustcolor(colorRampPalette(brewer.pal(8, \"Dark2\"))(nrow(farm)), alpha.f=0.8)\n  mysize <- ifelse(farm$What.is.your.farm.s.total.harvestable.acreage. == \"\", 1,\n                   ifelse(farm$What.is.your.farm.s.total.harvestable.acreage. == \"1-9\", 2,\n                          ifelse(farm$What.is.your.farm.s.total.harvestable.acreage. == \"1.5 Acres\", 2,\n                                 ifelse(farm$What.is.your.farm.s.total.harvestable.acreage. == \"10-49\", 3,\n                                        ifelse(farm$What.is.your.farm.s.total.harvestable.acreage. == \"50-179\", 4,\n                                               ifelse(farm$What.is.your.farm.s.total.harvestable.acreage. == \"180-499\", 5,\n                                                      ifelse(farm$What.is.your.farm.s.total.harvestable.acreage. == \"500-999\", 6,\n                                                             ifelse(farm$What.is.your.farm.s.total.harvestable.acreage.  == \"1000+\", 7,\n                                                                    1)))))))) \n  \n  mycols <- ifelse(farm$Have.you.ever.tried.to.sell.to.schools. == \"\", \"black\",\n                   ifelse(farm$Have.you.ever.tried.to.sell.to.schools. == \"No\", \"darkred\",\n                          ifelse(farm$Have.you.ever.tried.to.sell.to.schools. == \"Yes\", \"darkgreen\",\n                                 \"black\")))\n  mycols <- adjustcolor(mycols, alpha.f=0.3)\n  \n    map(\"county\", \"fl\", fill=TRUE, col=\"white\", border=\"darkgrey\")\n    \n    for(i in 1:nrow(farm)){\n      points(farm$lon[i], farm$lat[i], \n             col=mycols[i],\n             pch=16,cex = mysize[i] / 1.5)\n    }\n  \n  legend(\"bottomleft\", pch=16, col=adjustcolor(c(\"black\", \"darkred\", \"darkgreen\"), alpha.f=0.7),\n         legend=c(\"Unknown\", \"No\", \"Yes\"),\n         title = \"Ever tried to sell to schools?\",\n         bty=\"n\", border=FALSE, cex=0.9)\n  \n  legend(\"left\", pch=16, col=adjustcolor(\"grey\", alpha.f=0.5), pt.cex=(1:7)/1.5,\n         legend=c(\"Unknown\", \"1-9\", \"10-49\", \"50-179\", \"180-499\", \"500-999\", \"1000+\"),\n         title = \"Total harverstable acreage\",\n         bty=\"n\", border=FALSE, cex=0.9, y.intersp=1.6, ncol=2)\n  \n  \n    \n#     barplot(1:10, col=\"white\", border=\"white\", xlab=NA, ylab=NA, xaxt=\"n\", yaxt=\"n\")\n#     legend(\"center\", col=mycols, pch=16, border=FALSE, bty=\"n\",\n#            legend=farm$Farm.name., cex=0.7, pt.cex=1.5,\n#            ncol=2)\n\n  \n  \n}, height=600)\n  \n  ############\n  output$table1 <- renderDataTable({\n    x <- as.data.frame(mydata())\n    x <- x[,c(\"Farm.name.\", \"Farmer.name.\")]\n\n  })\n  \n  ############\n  output$table2 <- renderDataTable({\n    x <- as.data.frame(mydata_goodcolumns())\n    #x <- x[,names(july)]\n    \n  })\n\n############\noutput$table3 <- renderDataTable({\n  x <- as.data.frame(farm2)\n  #x <- x[,names(july)]\n  \n})\n\n\n###########\n\n# output$downloadData <- downloadHandler(\n#   filename = function() { paste(input$month, '.csv', sep='') },\n#   content = function(file) {\n#     write.csv(mydata(), file)\n#   }\n# )\n\n###########\n\noutput$downloadData1 <- downloadHandler(\n  \n  \n  filename = function() { paste(input$month, '.csv', sep='') },\n  content = function(file) {\n    write.csv(mydata_goodcolumns(), file)\n  }\n)\n\n\n###########\n\noutput$downloadData2 <- downloadHandler(\n\n  \n  filename = function() { paste(\"all_months\", '.csv', sep='') },\n  content = function(file) {\n    write.csv(farm2, file)\n  }\n)\n\n})\n",
    "created" : 1409146196164.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1056734509",
    "id" : "DC1025B8",
    "lastKnownWriteTime" : 1409168457,
    "path" : "~/ShinyApps/fts/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}