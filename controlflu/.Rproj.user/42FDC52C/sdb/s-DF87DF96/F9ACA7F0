{
    "contents" : "library(shiny)\nsuppressPackageStartupMessages(library(googleVis))\n\n\nshinyServer(function (input, output) {\n  \n  source(\"helper.R\")\n  \n  ########\n  mydata <- reactive({\n    ir[which(ir$team2014 == as.numeric(as.character(input$team))),]\n    })\n  \n  #######\n  mydata13 <- reactive({\n    mydata()[which(mydata()$year == 2013),]\n    })\n  \n  #######\n  output$plot1 <- renderPlot({\n    TeamFun(team = as.numeric(input$team), data = mydata(), bar=FALSE)\n    })\n  \n  #######\n  output$plot2 <- renderPlot({\n    par(mar=c(9,4,1,1))\n\n    TeamFun(team = as.numeric(input$team), data = mydata(), bar=TRUE)\n  })\n  \n  #######\n  output$plot3 <- renderPlot({\n    TeamFun(team = as.numeric(input$team), data = mydata(), cf=TRUE, bar=FALSE)\n  })\n  \n  #######\n  output$plot4 <- renderPlot({\n    par(mar=c(9,4,1,1))\n    \n    TeamFun(team = as.numeric(input$team), data = mydata(), cf=TRUE, bar=TRUE)\n  })\n  \n  \n\n  ########\n  output$text1 <- renderText({\n    paste(\"Team\", input$team, \"immunization rate overview\")\n  })\n  \n  ########\n  output$text2 <- renderText({\n    paste(\"Team\", input$team, \"consent form return rate overview\")\n  })\n  \n\n  ########\n  output$table1 <- renderDataTable({\n    x <- as.data.frame(mydata())\n    x[which(x$team2014 == input$team),]\n    x <- x[,c(\"school\", \"year\", \"immRate\", \"cfrr\", \"totMem\")]\n    x <- x[order(x$school),]\n  })\n  \n  ########\n  output$table2 <- renderDataTable({\n    x <- as.data.frame(mydata13())\n    x[which(x$team2014 == input$team),]\n    x <- x[,c(\"school\", \"year\", \"immRate\", \"doses\", \"totMem\")]\n    x <- x[order(x$school),]\n  })\n  \n\n  \n  ########\n  output$motionchart1 <- renderGvis({\n    \n    gvisMotionChart(data = mydata(), \n                    idvar = \"school\", \n                    timevar = \"year\",\n                    xvar = \"year\",\n                    yvar = \"immRate\",\n                    colorvar = \"cfrr\",\n                    sizevar = \"totMem\")\n\n  })\n  \n  ########\n  output$motionchart2 <- renderGvis({\n    \n    gvisMotionChart(data = ir, #mydata(), \n                    idvar = \"school\", \n                    timevar = \"year\",\n                    xvar = \"year\",\n                    yvar = \"immRate\",\n                    colorvar = \"team2014\",\n                    sizevar = \"totMem\")\n    \n  })\n  \n  ########\n  output$motionchart3 <- renderGvis({\n    \n    gvisMotionChart(data = mydata(), \n                    idvar = \"school\", \n                    timevar = \"year\",\n                    xvar = \"year\",\n                    yvar = \"immRate\",\n                    colorvar = \"p.vfc\",\n                    sizevar = \"totMem\")\n    \n  })\n\n\n  \n  \n#     plot(M)\n#     \n#     return (gvisMotionChart(cast.1,\"jurisdiccion\",timevar=\"Anio\",xvar=\"ipcf_mean\",yvar=\"ginis\",date.format=\"%Y\"))\n#     \n\n  \n#   output$edades <- renderGvis({\n#     \n#     cast.map <- aggregate(data()[,4],list(Jurisdiccion=data()$jurisdiccion),mean)\n#     names(cast.map)[2] <- \"promedio\"\n#     cast.map$promedio <- round(cast.map$promedio,3)\n#     \n#     map <- gvisGeoChart(cast.map,colorvar=\"promedio\",locationvar=\"Jurisdiccion\",\n#                         options=list(region=\"AR\",displayMode=\"regions\", resolution=\"provinces\",\n#                                      title=\"Average age per Province\",\n#                                      titlePosition='out',\n#                                      titleTextStyle=\"{color:'black',fontName:'Courier',fontSize:14}\",\n#                                      height=500, width=400))\n#     \n#     quant<-cut(data()$ch06,quantile(data()$ch06,(0:4)/4),include.lowest=TRUE,na.rm=TRUE)\n#     sset <- cbind(data(),quant)\n#     tab <- with(sset,prop.table(table(jurisdiccion,quant),1))\n#     tab <- as.data.frame.matrix(tab)\n#     tab <- tab*100\n#     tab <- round(tab,2)\n#     tab <- cbind(row.names(tab),tab)\n#     colnames(tab)[1] <- \"Provincia\"\n#     bar.pl <- gvisColumnChart(tab,xvar=colnames(tab)[1],yvar=colnames(tab)[2:5],\n#                               options=list(title=\"Age cuartiles per province (in %)\",\n#                                            titlePosition='out',\n#                                            hAxis=\"{slantedText:'true',slantedTextAngle:45}\",\n#                                            titleTextStyle=\"{color:'black',fontName:'Courier',fontSize:14}\",\n#                                            height=500, width=400))\n#     \n#     merge <- gvisMerge(map,bar.pl,horizontal=TRUE,tableOptions=\"cellspacing=10\")\n#     \n#     return(merge)\n#     \n#   })\n#   \n#   output$tabla1 <- renderGvis({\n#     \n#     t1 <- with(data(), prop.table(table(jurisdiccion,ocupacion),1))\n#     t1 <- as.data.frame.matrix(t1)\n#     t1 <- t1*100\n#     t1 <- round(t1,1)\n#     t1 <- cbind(row.names(t1),t1)\n#     colnames(t1)[1] <- \"Provincia\"\n#     t1.pl <- gvisTable(t1,options=list(page='enable',height=300,width=800))\n#     return(t1.pl)\n#   })\n#   \n#   output$tabla2 <- renderGvis({\n#     t2 <- with(data(), prop.table(table(jurisdiccion,caes_recode2),1))\n#     t2 <- as.data.frame.matrix(t2)\n#     t2 <- t2*100\n#     t2 <- round(t2,1)\n#     t2 <- cbind(row.names(t2),t2)\n#     colnames(t2) <- tolower(colnames(t2))\n#     colnames(t2)[1] <- \"Provincia\"\n#     t2.pl <- gvisTable(t2,options=list(page='enable',height=300,width=800))\n#     \n#     return(t2.pl)\n#   })\n#   \n#   output$linech <- renderGvis({\n#     tab <- with(data(),prop.table(table(jurisdiccion,nivel_ed),1))\n#     tab <- as.data.frame.matrix(tab)\n#     tab <- tab*100\n#     tab <- round(tab,2)\n#     tab <- cbind(row.names(tab),tab)\n#     colnames(tab)[1] <- \"Provincia\"\n#     tab <- tab[,-grep(\"Sin instruccion\",colnames(tab))]\n#     order <- c(\"Provincia\",\"Primaria Incompleta\",\"Primaria Completa\",\"Secundaria Incompleta\",\"Secundaria Completa\",\n#                \"Universitaria Incompleta\", \"Universitaria Completa\")\n#     \n#     index <- lapply(order, function(x) grep(x,names(tab)))\n#     \n#     tab <- tab[,c(as.numeric(index))]\n#     \n#     tab.s <- cbind(tab[,1],sum(tab[,2:7]),sum(tab[,3:7]),sum(tab[,4:7])\n#                    ,sum(tab[,5:7]),sum(tab[,6:7]),sum(tab[,7]))\n#     \n#     tab.2 <- data.frame(rep(0,nrow(tab)),rep(0,nrow(tab)),rep(0,nrow(tab))\n#                         ,rep(0,nrow(tab)),rep(0,nrow(tab)),rep(0,nrow(tab)))\n#     \n#     names(tab.2) <- names(tab)[2:7]\n#     \n#     for ( i in 1:6){\n#       for (j in 1:6){\n#         if(i >= j){\n#           tab.2[,j] <- tab.2[,j]+tab[,i+1]\n#         } \n#       }\n#     }\n#     tab.pl <- as.data.frame(t(tab.2))\n#     colnames(tab.pl) <- tab$Provincia\n#     tab.pl <- cbind(Nivel_ed=names(tab)[2:7],tab.pl)\n#     \n#     #### Area under curve ####\n#     \n#     areas <- rbind(rep(100,ncol(tab.pl)),tab.pl)\n#     \n#     areas[,2:ncol(areas)] <- areas[,2:ncol(areas)]/100\n#     \n#     ed.coef <- (areas[1,-c(1)]+areas[2,-c(1)])/2\n#     limit <- nrow(areas)-1\n#     \n#     for (i in 2:limit){\n#       j <- i +1\n#       ed.coef <- ed.coef + (areas[i,-c(1)]+areas[j,-c(1)])/2\n#     }\n#     \n#     ed.coef <- ed.coef/limit\n#     \n#     ed.coef <- t(ed.coef)\n#     ed.coef <- round(ed.coef,4)\n#     ed.coef <- cbind(colnames(areas)[-c(1)],ed.coef)\n#     \n#     ed.coef <- as.data.frame(ed.coef)\n#     colnames(ed.coef)<-c(\"Provincia\",\"Education Completeness\")\n#     \n#     #### Plots ###\n#     \n#     line.pl <- gvisLineChart(tab.pl,xvar=colnames(tab.pl)[1],yvar=colnames(tab.pl)[-1],\n#                              options=list(\n#                                title=\"Education Curve\",\n#                                titlePosition='out',\n#                                hAxis=\"{slantedText:'true',slantedTextAngle:45}\",\n#                                titleTextStyle=\"{color:'black',fontName:'Courier'}\",\n#                                legend=\"{color:'black',fontName:'Courier'}\",\n#                                fontSize=\"10\",\n#                                chartArea=\"{left:40,top:30,width:'70%',height:'75%'}\",            \n#                                height=550, width=600))\n#     \n#     t1.ed <- gvisTable(ed.coef,\n#                        options=list(page='enable',fontSize=\"10\",height=300,width=275))\n#     \n#     ed.output <- gvisMerge(line.pl,t1.ed,horizontal=TRUE)\n#     \n#     return(ed.output)\n#   })\n  \n  #outputOptions(output, \"motionchart\", suspendWhenHidden = FALSE)\n\n\n#   outputOptions(output, \"edades\", suspendWhenHidden = FALSE)\n#   outputOptions(output, \"tabla1\", suspendWhenHidden = FALSE)\n#   outputOptions(output, \"tabla2\", suspendWhenHidden = FALSE)\n#   outputOptions(output, \"linech\", suspendWhenHidden = FALSE)\n})",
    "created" : 1406690476901.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1651411802",
    "id" : "F9ACA7F0",
    "lastKnownWriteTime" : 1409012819,
    "path" : "~/ShinyApps/controlflu/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}