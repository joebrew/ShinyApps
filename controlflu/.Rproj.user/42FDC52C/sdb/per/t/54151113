{
    "contents" : "#############\n# READ IN DATA FROM END OF EXPLORATION 5\n#############\n#load(\"/glusterfs/users/erozier/data/jb/exploration5done.RData\")\nload(\"c:/users/brewjr/documents/dssg/exploration5done.RData\")\n\n#############\n# B.SMALL\n#############\nb.small <- b[,c(\"civis_latitude\", \"civis_longitude\", \"BLDG_ID\")]\nrm(b, j.df)\nsave.image(\"c:/users/brewjr/documents/dssg/b.small\")\nload(\"c:/users/brewjr/documents/dssg/b.small\")\n\n##############\n# CREATE COLUMNS IN b.small FOR EACH BLDG_ID\n############## \n\npb = txtProgressBar(min=0,max=length(unique(b.small$BLDG_ID)),style=3) ####### Progress of loop\n\nfor (i in unique(b.small$BLDG_ID)){\n  b.small[,paste0(\"distance.to.\", i)] <- NA\n  #setTxtProgressBar(pb, i)\n  \n}\n\n\n#CALCULATE DISTANCE\nlibrary(geosphere)\n\ndistm(x = cbind(b.small$civis_latitude[1], b.small$civis_longitude[1]), \n      y = cbind(b.small$civis_latitude, b.small$civis_longitude), \n      fun=distHaversine)\n\n\n#############\n# ADD PROPORTION OF TESTS G5 AND G10\n#############\n\n#all\nj.df$p.g5.before.build <- j.df$n.g5.before.build / j.df$n.test.before.build\nj.df$p.g10.before.build <- j.df$n.g10.before.build / j.df$n.test.before.build\n\n#high\nj.df$p.g5.before.build.high <- j.df$n.g5.before.build.high / j.df$n.test.before.build.high\nj.df$p.g10.before.build.high <- j.df$n.g10.before.build.high / j.df$n.test.before.build.high\n\n#first\nj.df$p.g5.before.build.first <- j.df$n.g5.before.build.first / j.df$n.test.before.build.first\nj.df$p.g10.before.build.first <- j.df$n.g10.before.build.first / j.df$n.test.before.build.first\n\n############\n# MAKE AGE.KID.YEARS CATEGORICAL\n############\nj.df$age.kid.years.fac <- factor(j.df$age.kid.years)\n\n############\n# MAKE MONTH VARIABLE\n#############\nj.df$month <- factor(format(j.df$sample_date,\n                     format=\"%b\"))\n\n#############\n# ADD ID\n#############\n\n\n#############\n# MAKE j.df AND b SMALLER (memory issues)\n############# \nj.df1 <- j.df[,c(\"BLDG_ID\",\n                 \"sex\",\n                 \"bll\",\n                 \"sample_type\",\n                 \"sample_date\",\n                 \"dob\",\n                 \"civis_latitude\",\n                 \"civis_longitude\",\n                 \"total.Value\",\n                 \"code\",\n                 \"actual.value\",\n                 \"init.date\",\n                 \"comply.date\",\n                 \"interior\",\n                 \"exterior\",\n                 \"clean\",\n                 \"age.kid\",\n                 \"yearBuilt\",\n                 \"yearBuilt5\",\n                 \"sample_year\",\n                 \"census.tract\",\n                 \"pPoverty\",\n                 \"pBA\",\n                 \"school.zone\",\n                 \"race\",\n                 \"first\",\n                 \"high\",\n                 \"full.name.dob\")]\nj.df2 <- j.df[,159:ncol(j.df)]\nj.small <- cbind(j.df1, j.df2)\nrm(j.df1, j.df2, j.df, b)\n#save.image(\"c:/users/brewjr/documents/dssg/jsmall.RData\")\n\n\n\n################\n# WORKING WITH j.SMALL\n################\nload(\"c:/users/brewjr/documents/dssg/jsmall.RData\")\nj.tiny <- j.small[,c(\"sample_date\", \"bll\", \"race\", \"pPoverty\", \"yearBuilt\",\n                     \"full.name.dob\", \"civis_latitude\", \"civis_longitude\")]\n\nj.tiny <- j.tiny[which(j.tiny$yearBuilt >= 1978 & j.tiny$bll > 10 & \n                         j.tiny$sample_date >= \"2005-01-01\"),]\nj.tiny$id <- 1:nrow(j.tiny)\nj.tiny$latlon <- paste0(j.tiny$civis_latitude,\":\", j.tiny$civis_longitude)\n\nlibrary(googleVis)\n\nM <- gvisMotionChart(data = j.tiny, idvar=\"full.name.dob\", timevar=\"sample_date\")\n# M <- gvisBubbleChart(data = j.tiny,  idvar = \"full.name.dob\",\n#                      xvar = \"yearbuilt\", yvar = \"bll\",\n#                      colorvar = \"race\",\n#                      sizevar = \"pPoverty\")\n\nplot(M)\n\nM1 <- gvisMap(j.tiny, \"latlon\" , \"full.name.dob\")\n\nplot(M1)\n\n\n##############\n# MODELLING \n##############\n\n# SUBSET TRAINING DATA\ntrain <- j.small[which(j.small$high & j.small$age.kid.years <=4 &\n                         j.small$dob >= \"2002-01-01\" &\n                         j.small$dob <= \"2006-12-31\"),]\ntrain$age.kid.years.fac <- factor(train$age.kid.years.fac)\n\n# SUBSET TESTING DATA\ntest <- j.small[which(j.small$high & j.small$dob >= \"2007-01-01\" &\n                        j.small$dob <= \"2008-12-31\" &\n                        j.small$age.kid.years <=4 &\n                        j.small$age.kid >= 0),]\ntest$age.kid.years.fac <- factor(test$age.kid.years.fac)\n\n# REMOVE j.small\nrm(j.small)\n\n#############\n# WRITE FUNCTION FOR TESTING MODELS\n#############\nTestModel <- function(model, cutoff = 0.5){\n  x <- predict(model, test, type=\"response\")\n  test$g10.predicted <- ifelse(x > cutoff, \"predicted.true\", \"predicted.false\")\n  test$g10.observed <- ifelse(test$bll > 10, \"observed.true\", \"observed.false\")\n  \n  truth.table <- table(test$g10.predicted, test$g10.observed)\n  truth.table\n  prop.table(truth.table, 1)*100  \n}\n\n\n#############\n# SPECIFY MODEL FORMULA\n#############\n\nmodform.inter <- \n  factor(bll > 5) ~ \n  race + \n  sex + \n  #factor(code) +\n  era + \n  age.kid.years.fac +\n  factor(clean) +\n  sample_date +\n  mean.bll.before.build.high +\n  p.g5.before.build.high +\n  p.g10.before.build.high +\n  cond + \n  exterior +\n  interior +\n  pPoverty +\n  month +\n  #race*sex +\n  #race*era +\n  #race*cond +\n  cond*era\n\n#############\nmodform <- factor(bll > 10) ~ \n  #race + \n  #sex + \n  #factor(code) +\n  #era + \n  age.kid.years.fac +\n  #factor(clean) +\n  #sample_date +\n  #mean.bll.before.build.high +\n  #p.g5.before.build.high +\n  p.g10.before.build.high +\n  #cond + \n  exterior +\n  interior +\n  pPoverty +\n  month \n\n######################################################################\n######################################################################\n# <MODELS>\n\n\n\n#######################################################################\n# LOGISTIC REGRESSION\n##############\n\n# I should really impute the NA's for a bunch of these...\n\n\nfit <- glm(modform.inter,\n           data = train,\n           na.action= na.omit,\n           family=binomial(\"logit\"))\nsummary(fit)\n\n# ASSIGN TO TRAIN\ntrain$predicted <- predict(fit, train, type=\"response\") #> 0.5\nsummary(train$predicted)\ntrain$predicted <- train$predicted > 0.3\nsummary(train$predicted)\n\n# ASSIGN TO TEST\ntest$predicted <- predict(fit, test, type=\"response\") > 0.2\n\n# SO FAR, BEST RESULTS BY SETTING CUTOFF AT 0.2\nTestModel(fit,\n          cutoff = 0.4)\n\n\nfor (i in seq(0,1, 0.1)){\n    TestModel(fit,\n              cutoff = i)\n}\nTestModel(fit)\n\n\n##############################\n\n#######################################################################\n# CLASSIFICATION TREE\n################\nlibrary(rpart)\n\nTestModelClassTree <- function(model, cutoff = 0.5){\n  x <- predict(model, test, type=\"prob\")\n  x <- as.data.frame(unlist(x))\n  names(x) <- c(\"false\", \"true\")\n  \n  test$g10.predicted <- ifelse(x$true > cutoff, \"predicted.true\", \"predicted.false\")\n  test$g10.observed <- ifelse(test$bll > 10, \"observed.true\", \"observed.false\")\n  \n  truth.table <- table(test$g10.predicted, test$g10.observed)\n  truth.table\n  prop.table(truth.table, 1)*100  \n}\n\nmodform <- \n  factor(bll > 10) ~ \n  p.g10.before.build + \n  month + \n  race +\n  cond + \n  era \n\nfit <- rpart(modform, data=train, method=\"class\", control=rpart.control(minsplit=20, cp=0.00001))\n\nprintcp(fit)\nplot(fit)\nplotcp(fit)\ntrain$predicted <- predict(fit, train, type=\"prob\") #> 0.5\ntest$predicted <- 1- predict(fit, test, type=\"prob\")[[1]]\ntest$predicted <- predict(fit, test, type=\"prob\")\nTestModelClassTree(fit,\n                   cutoff = 0.6)\n\npredict(object, newdata,\n        type = c(\"vector\", \"prob\", \"class\", \"matrix\"),\n        na.action = na.pass, ...)\n\nTestModel(fit)\n\n########################################################################\n# RANDOM FOREST\n###################\n\nlibrary(randomForest)\n\nfit <- randomForest(modform, data=train, na.action = na.omit)\nprint(fit) # view results \nimportance(fit) # importance of each predictor\n\n###########################################################################\n# BAGGING LOGISTIC REGRESSION\n##################\n\nlibrary(ipred)\nfit <- ipredbagg(factor(train$bll>10),\n                 X= train[,c(\"race\", \"month\", \"cond\", \"sex\", \"age.kid.years.fac\",\n                             \"p.g10.before.build.high\")],\n                 nbagg=5)\n\nfit <- ipredbagg(glm(factor(bll>10) ~\n                       race + month + cond + sex + age.kid.years.fac + p.g10.before.build.high, \n                     data=train))\n#summary(fit)\ntrain$predicted <- predict(fit, train, newmfinal=length(fit$trees))\nsummary(train$predicted)\n\n#now test\ntest$predicted <- predict(fit, test)\nsummary(test$predicted)\n\ntest$observed <- test$bll > 10\n\ntable(test$observed, test$predicted)\nprop.table(table(test$observed, test$predicted),1)*100\nlibrary(adabag)\nfit <- bagging(modform, data=train, mfinal=10)\n\npredict((object, newdata, newmfinal=length(object$trees), ...))\n\n\n#######################################################################\n# RANDOM GLM\n#############\n\nlibrary(randomGLM)\nfit <- randomGLM(modform, data=train, na.action=na.rpart)\npredict(fit, test, type=\"class\",\n        thresholdClassProb = object$thresholdClassProb, ...)\n\n\n#######################################################################\n#CONDITIONAL TREE\n#############\n\nlibrary(\"partykit\")\n\n# train.tree <- train[which(!is.na(factor(train$age.kid.years)) &\n#                             !is.na(train$race) &\n#                             !is.na(train$bll)),]\n# fit.ctree = ctree(modform, data=train.tree)\nfit <- ctree(modform, data=train)\nfit.ctree\nplot(fit.ctree,\n     inner_panel=node_inner(fit.ctree,\n                            abbreviate = TRUE,            # short variable names\n                            pval = FALSE,                 # no p-values\n                            id = FALSE),                  # no id of node\n     terminal_panel=node_terminal(fit.ctree, \n                                  abbreviate = TRUE,\n                                  digits = 1,                   # few digits on numbers\n                                  fill = c(\"white\"),            # make box white not grey\n                                  id = FALSE)\n))\n\n#Plot thre tree\nplot(fit.ctree, gp = gpar(fontsize = 8),  \n     inner_panel=node_inner,\n     ip_args=list(\n       abbreviate = TRUE, \n       id = FALSE)\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n##############\n# EXPLORE BLL AND AGE\n##############\n\n#first, create pretty bp function\njbp <- function(var, color, names, myTitle=NULL){\n  mybp <- barplot(var, \n                  col=adjustcolor(color, alpha.f=0.3),\n                  names.arg=NA,\n                  border=FALSE)\n  axis(side=1, at=mybp[,1], \n       labels=names,\n       las=3, \n       cex.axis=0.7,\n       tick=FALSE,\n       line=-1)\n  text(x=mybp[,1], y=var, pos=1,\n       labels=round(var, digits=1),\n       col=adjustcolor(\"black\", alpha.f=0.8),\n       cex=0.3)\n  title(main=myTitle)\n}\n\n\na <- as.data.frame(0:100)\nnames(a) <- \"age\"\n\n#mean.tests\nfor (i in a$age){\n  temp <- j.df$bll[which(j.df$age.kid.years == i)]\n  a$mean.bll[which(a$age == i)] <-\n    mean(temp, na.rm=TRUE)\n}\njbp(a$mean.bll[1:20], color=\"darkblue\", names=a$age[1:20], myTitle=\"Mean BLL by age (all tests)\")\n\n#n.tests\nfor (i in a$age){\n  temp <- j.df$bll[which(j.df$age.kid.years == i)]\n  a$n.tests[which(a$age == i)] <-\n    length(temp)\n}\njbp(a$n.tests[1:20], color=\"darkblue\", names=a$age[1:20], myTitle=\"Number of tests by age (all tests)\")\n\n\n#n.tests.unique\nfor (i in a$age){\n  temp <- j.df$full.name.dob[which(j.df$age.kid.years == i)]\n  a$n.tests.unique[which(a$age == i)] <-\n    length(unique(temp))\n}\njbp(a$n.tests.unique[1:20], color=\"darkblue\", names=a$age[1:20], myTitle=\"Number of tests by age (unique tests by year)\")\n\n#mean.bll.high\na$mean.bll.high <- vector(length=nrow(a), mode=\"numeric\")\nx <- j.df[,c(\"age.kid.years\", \"full.name.dob\",\"bll\")]\nfor (i in a$age){\n  temp <- x[which(x$age.kid.years == i),]\n  temp <- temp[!duplicated(temp$full.name.dob),]\n  temp <- temp$bll\n  a$mean.bll.high[which(a$age == i)] <-\n    mean(temp, na.rm=TRUE)\n}\nrm(x)\njbp(a$mean.bll.high[1:20], color=\"darkblue\", names=a$age[1:20], myTitle=\"Mean BLL by age (all tests)\")\n\n\n\n\n##############\n# CALCULATE MEAN BLL PER YEAR, AND MEAN HIGH BLL PER YEAR\n##############\nts <- as.data.frame(1993:2013)\nnames(ts) <- \"year\"\n\n#mean.bll.all\nts$mean.bll.all <- NA\nfor (i in ts$year){\n  ts$mean.bll.all[which(ts$year == i)] <-\n    mean(j.df$bll[which(j.df$sample_year == i)],\n         na.rm=T)\n}\n\n\n#mean.bll.high\nhigh <- j.df[which(j.df$high),]\nts$mean.bll.high <- NA\nfor (i in ts$year){\n  ts$mean.bll.high[which(ts$year == i)] <-\n    mean(high$bll[which(j.df$sample_year == i)],\n         na.rm=T)\n}\nrm(high, i)\n\n##############\n# ANSWER EMILE'S QUESTION ON WHAT PERCENTAGE OF EACH BIRTH COHORT IS TESTED BY TWO YEARS OLD\n##############\n\n#cohort Before 1\nts$under1 <- NA\nfor (i in ts$year){\n  ts$under1[which(ts$year == i)] <-\n    length(unique(j.df$full.name.dob[which(j.df$birth.year == i &\n                                             j.df$age.kid <= (365.25 ))]))\n}\n\n#cohort Before 2\nts$under2 <- NA\nfor (i in ts$year){\n  ts$under2[which(ts$year == i)] <-\n    length(unique(j.df$full.name.dob[which(j.df$birth.year == i &\n                                             j.df$age.kid <= (365.25 * 2))]))\n}\n\n##############\n# BY RACE AND AGE\n##############\n\n#create empty vectors\nfor (i in unique(j.df$race)){\n  for (j in 1:2){\n    ts[,paste0(\"under\", j, i)] <- \n      vector(length=nrow(ts), mode=\"numeric\")\n  }}\n\n#populate empty race vectors #(3 minutes)\nsystem.time(\n  for (i in unique(j.df$race)){\n    for (j in 1:2){\n      for (k in ts$year){\n        ts[which(ts$year == k),paste0(\"under\", j, i)] <- \n          length(unique(j.df$full.name.dob[which(j.df$birth.year == k &\n                                                   j.df$age.kid <= (365.25 * j) &\n                                                   j.df$race == i)]))\n      }\n    }}\n)\nrm(i, j, k)\n\n############\n# ADD EMILE'S DENOMINATOR NUMBERS\n############ \nts$denom <- NA\nts$denom[which(ts$year == 2004)] <- 46563\nts$denom[which(ts$year == 2005)] <- 45415\nts$denom[which(ts$year == 2006)] <- 45830\nts$denom[which(ts$year == 2007)] <- 46243\nts$denom[which(ts$year == 2008)] <- 45376\nts$denom[which(ts$year == 2009)] <- 44441\n\n#\nplot(ts$year, ts$under1 /ts$denom*100, type=\"l\", \n     ylim=c(0,100),\n     xlim=c(2003, 2010),\n     xlab=\"Year of birth\", \n     ylab=\"Percent tested\",\n     lwd=4,\n     col=adjustcolor(\"darkred\", alpha.f=0.6))\ntext(x=ts$year, \n     y=ts$under1/ts$denom*100,\n     labels=paste0(\"\",round(ts$under1/ts$denom*100, digits=2)),\n     col=adjustcolor(\"darkred\", alpha.f=0.5),\n     pos=c(1,3),\n     cex=0.76)\npoints(x=ts$year, \n       y=ts$under1/ts$denom*100,\n       pch=16,\n       cex=1.3,\n       col=adjustcolor(\"darkred\", alpha.f=0.6))\n\nlines(ts$year, ts$under2 /ts$denom*100, type=\"l\", ylim=c(0,100),\n      lwd=4,\n      col=adjustcolor(\"darkblue\", alpha.f=0.6))\ntext(x=ts$year, \n     y=ts$under2/ts$denom*100,\n     labels=paste0(\"\",round(ts$under2/ts$denom*100, digits=2)),\n     col=adjustcolor(\"darkblue\", alpha.f=0.5),\n     pos=c(1,3),\n     cex=0.76)\npoints(x=ts$year, \n       y=ts$under2/ts$denom*100,\n       pch=17,\n       col=adjustcolor(\"darkblue\", alpha.f=0.6),\n       cex=1.3)\n\n# LEGEND\nlegend(x=\"topleft\",\n       col=adjustcolor(c(\"darkblue\", \"darkred\"), alpha.f=0.6),\n       pch=c(17, 16),\n       lwd=4,\n       pt.cex=1.3,\n       legend=c(\"By 2 years old\", \"By 1 year old\"),\n       bty=\"n\",\n       border=FALSE)\n\n#GRIDLINES\nabline(h=seq(0,100, 20), col=adjustcolor(\"black\", alpha.f=0.1))\nabline(v=2000:2014, col=adjustcolor(\"black\", alpha.f=0.1))\n\n#TITLE\ntitle(main=\"Estimated percentage of children tested by birth cohort\")\n\n\n#############\n# NUMBER OF KIDS TESTED BY RACE\n#############\nJ <- function(race, color){\n  #under 1\n  lines(ts$year, ts[,paste0(\"under1\", race)],\n        col=adjustcolor(color, alpha.f=0.4),\n        lwd=1)\n  points(ts$year, ts[,paste0(\"under1\", race)],\n         col=adjustcolor(color, alpha.f=0.4),\n         cex=1.2,\n         pch=16)\n  \n  #under 2\n  lines(ts$year, ts[,paste0(\"under2\", race)],\n        col=adjustcolor(color, alpha.f=0.4),\n        lwd=1)\n  points(ts$year, ts[,paste0(\"under2\", race)],\n         col=adjustcolor(color, alpha.f=0.4),\n         cex=1.2,\n         pch=17)\n}\n\n\n\nplot(ts$year,\n     ts$year,\n     xlim=c(2003,2010),\n     ylim=c(0,15000),\n     xlab=\"Year of birth\",\n     ylab=\"Number of children\",\n     type=\"n\")\n\n#GRIDLINES\nabline(h=seq(0,50000, 10000), col=adjustcolor(\"black\", alpha.f=0.1))\nabline(v=2000:2014, col=adjustcolor(\"black\", alpha.f=0.1))\n\n#TITLE\ntitle(main=\"Estimated number of children tested by race\")\n\n#white\nJ(\"latino\", \"red\")\nJ(\"white\", \"blue\")\nJ(\"black\", \"darkgreen\")\nJ(\"asian\", \"black\")\n\n#LEGEND\nlegend(x=\"topleft\",\n       pch=c(17,16),\n       col=adjustcolor(\"black\", alpha.f=0.3),\n       legend=c(\"By 2 years old\", \"By 1 year old\"),\n       bg=\"white\",\n       bty=\"n\",\n       border=FALSE)\nlegend(x=\"top\",\n       lty=1,\n       col=adjustcolor(c(\"red\", \"blue\", \"darkgreen\", \"black\"), alpha.f=0.4),\n       lwd=2,\n       legend=c(\"Latino\", \"White\", \"Black\", \"Asian\"),\n       bty=\"n\",\n       border=FALSE,\n       ncol=4)\n\n#INDIVIDUAL RACE PLOTS\n#############\n# NUMBER OF KIDS TESTED BY RACE\n#############\nJ <- function(race, color){\n  \n  plot(ts$year, ts[,paste0(\"under2\", race)],\n       type=\"n\",\n       xlab= \"Year of birth\", \n       ylab= \"Numer of children\",\n       main=paste(race),\n       xlim=c(1998, 2010))\n  #under 1\n  lines(ts$year, ts[,paste0(\"under1\", race)],\n        col=adjustcolor(color, alpha.f=0.4),\n        lwd=1)\n  points(ts$year, ts[,paste0(\"under1\", race)],\n         col=adjustcolor(color, alpha.f=0.4),\n         cex=1.2,\n         pch=16)\n  \n  #under 2\n  lines(ts$year, ts[,paste0(\"under2\", race)],\n        col=adjustcolor(color, alpha.f=0.4),\n        lwd=1)\n  points(ts$year, ts[,paste0(\"under2\", race)],\n         col=adjustcolor(color, alpha.f=0.4),\n         cex=1.2,\n         pch=17)\n  \n  \n  #LEGEND\n  legend(x=\"bottom\",\n         pch=c(17,16),\n         col=adjustcolor(color, alpha.f=0.3),\n         legend=c(\"By 2 years old\", \"By 1 year old\"),\n         bg=\"white\",\n         bty=\"n\",\n         border=FALSE,\n         lwd=1)\n  \n  # TEXT\n  text(ts$year, ts[,paste0(\"under1\", race)],\n       col=adjustcolor(color, alpha.f=0.4),\n       labels= round(ts[,paste0(\"under1\", race)], digits=1),\n       cex=0.45,\n       pos=1)\n  \n  #under 2\n  text(ts$year, ts[,paste0(\"under2\", race)],\n       col=adjustcolor(color, alpha.f=0.4),\n       labels= round(ts[,paste0(\"under2\", race)], digits=1),\n       cex=0.45,\n       pos=1)\n}\n\npar(mfrow=c(2,2))\n\nJ(race=\"latino\", \"red\")\nJ(\"white\", \"darkblue\")\nJ(\"black\", \"darkgreen\")\nJ(\"asian\", \"black\")\n\n\n\n#SCATTERPLOT BLL POST REMEDIATION\nplot(j.df$since.comply,\n     j.df$bll, col=adjustcolor(\"black\", alpha.f=0.05),\n     xaxt=\"n\",\n     xlab=\"Years since compliance\",\n     ylab=\"BLL\",\n     main=\"Compliance and BLL (all tests)\")\naxis(side=1, at=seq((-30*365.25), (30*365.25), (365.25)),\n     labels=seq(-30,30,1),las=3, cex.axis=0.8)\nabline(v=0, col=adjustcolor(\"red\", alpha.f=0.2))\nabline(v=362.25 * -30:30, col=adjustcolor(\"darkgreen\", alpha.f=0.2))\nabline(h=0, col=\"red\")\nabline(v=0, col=\"red\")\n\ntext(x=0,\n     y=80,\n     labels=\"Compliance\\ndate\",\n     cex=0.7,\n     col=adjustcolor(\"darkred\", alpha.f=0.7),\n     pos=4)\n\n\n#SCATTERPLOT DEMEANED BLL POST REMEDIATION\nplot(j.df$since.comply,\n     j.df$demeaned.bll.all, col=adjustcolor(\"black\", alpha.f=0.05),\n     xaxt=\"n\",\n     xlab=\"Years since compliance\",\n     ylab=\"Demeaned BLL\",\n     main=\"Compliance and BLL (all tests)\")\naxis(side=1, at=seq((-30*365.25), (30*365.25), (365.25)),\n     labels=seq(-30,30,1),las=3, cex.axis=0.8)\nabline(v=0, col=adjustcolor(\"red\", alpha.f=0.2))\nabline(v=362.25 * -30:30, col=adjustcolor(\"darkgreen\", alpha.f=0.2))\nabline(h=0, col=\"red\")\nabline(v=0, col=\"red\")\n\ntext(x=0,\n     y=80,\n     labels=\"Compliance\\ndate\",\n     cex=0.7,\n     col=adjustcolor(\"darkred\", alpha.f=0.7),\n     pos=4)\n\n# JUST LOOK AT HIGH\nhigh <- j.df[which(j.df$high),]\n#SCATTERPLOT HIGH\nplot(high$since.comply,\n     high$demeaned.bll.high, col=adjustcolor(\"black\", alpha.f=0.05),\n     xaxt=\"n\",\n     xlab=\"Years since compliance\",\n     ylab=\"Demeaned BLL\",\n     main=\"Compliance and BLL (high tests)\")\naxis(side=1, at=seq((-30*365.25), (30*365.25), (365.25)),\n     labels=seq(-30,30,1),las=3, cex.axis=0.8)\nabline(v=0, col=adjustcolor(\"red\", alpha.f=0.2))\nabline(v=362.25 * -30:30, col=adjustcolor(\"darkgreen\", alpha.f=0.2))\nabline(h=0, col=\"red\")\nabline(v=0, col=\"red\")\n\ntext(x=0,\n     y=80,\n     labels=\"Compliance\\ndate\",\n     cex=0.7,\n     col=adjustcolor(\"darkred\", alpha.f=0.7),\n     pos=4)\n\n# JUST LOOK AT SINGLE FAMILY HIGH\nsingle.family <- high[which(as.numeric(as.character(high$code)) >=202 & \n                              as.numeric(as.character(high$code)) <= 209),]\n\n# PLOT SINGLE FAMILY\nplot(single.family$since.comply,\n     single.family$demeaned.bll.all, col=adjustcolor(\"black\", alpha.f=0.05),\n     xaxt=\"n\",\n     xlab=\"Years since compliance\",\n     ylab=\"Demeaned BLL\",\n     main=\"Compliance and BLL (high tests, single family homes)\")\naxis(side=1, at=seq((-30*365.25), (30*365.25), (365.25)),\n     labels=seq(-30,30,1),las=3, cex.axis=0.8)\nabline(v=0, col=adjustcolor(\"red\", alpha.f=0.2))\nabline(v=362.25 * -30:30, col=adjustcolor(\"darkgreen\", alpha.f=0.2))\nabline(h=0, col=\"red\")\nabline(v=0, col=\"red\")\n\ntext(x=0,\n     y=80,\n     labels=\"Compliance\\ndate\",\n     cex=0.7,\n     col=adjustcolor(\"darkred\", alpha.f=0.7),\n     pos=4)\n\n",
    "created" : 1406691248891.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4196502007",
    "id" : "54151113",
    "lastKnownWriteTime" : 1406678091,
    "path" : "~/dssg/cdph/Exploration6models.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}