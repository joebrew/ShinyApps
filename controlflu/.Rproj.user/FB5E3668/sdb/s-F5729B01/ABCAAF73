{
    "contents" : "#######################\n# ATTACH LIBRARIES\n#######################\n\nlibrary(RCurl)\nlibrary(RColorBrewer)\nsuppressPackageStartupMessages(library(googleVis))\n\n#######################\n# READ IN IMMUNIZATION HISTORY FROM GOOGLE\n#######################\n# \n# myLink <- \"https://docs.google.com/spreadsheets/d/1rJrZwc9KmQsa2a7bOAX4wvPLc2p4lEtiuvxyufmE070/export?&format=csv\"\n# options(RCurlOptions = list(cainfo = system.file(\"CurlSSL\", \"cacert.pem\", package = \"RCurl\")))\n# myCsv <- getURL(myLink)\n# \n# ir <- read.csv(textConnection(myCsv), skip=0)\n# rm(myCsv, myLink)\n# \n# ir$team2014 <- factor(ir$team2014)\n\n# READ LOCALLY  - CHANGE LATER\n#setwd(\"C:/Users/BrewJR/Documents/ShinyApps/controlfluteams\")\nir <- read.csv(\"ir.csv\")\ncf <- read.csv(\"cfrr.csv\")\ncl <- read.csv(\"cl.csv\")\n\n#make team factor\nir$team2014 <- factor(ir$team2014)\n\n#Make grade columns factors\nfor (i in 0:12){\n  for (j in c(\"cfrr\", \"immRate\")){\n    ir[,paste0(j,\"_grade\",i)] <- \n      factor(ir[,paste0(j,\"_grade\",i)])\n  }\n}\n\n# fix the -1s\nir$cfrr_grade.1 <- factor(ir$cfrr_grade.1)\nir$immRate_grade.1 <- factor(ir$immRate_grade.1)\n\n\n#######################\n# FUNCTION FOR PLOTTING BY GRADE\n#######################\nGradeFun <- function(school, year, bar=TRUE){\n\n    grades <- c(\".1\", 0:12)\n    gradecols <- colorRampPalette(brewer.pal(8, \"Dark2\"))(length(grades)) \n    gradecols <- adjustcolor(gradecols, alpha.f=0.7)\n    \n    \n    if(!bar){\n    #par(mfrow=c(1,2))\n      par(mar=c(4,4,0,0))\n    plot(2006:2013, 2006:2013, \n         type=\"n\", ylim=c(0,100), xlim=c(2011,2013),\n         xlab= NA, ylab= \"Immunization rate\",\n         xaxt=\"n\", cex.axis=1.5)\n    \n    text(x=2012, y = 15, labels=paste0(\"Immunization rate \"),\n         cex=1.5)\n    text(x= 2012, y = 5, labels = paste0( \"(\", school, \")\"))\n    \n    axis(side=1, at=2011:2013, labels=2011:2013)\n    for (i in 1:length(grades)){\n      \n      myVals <- as.numeric(as.character(ir[which(ir$school == school), paste0(\"immRate_grade\", grades[i])]))\n      myYears <- as.numeric(as.character(ir$year[which(ir$school == school)]))\n      myPoints <- 12:25\n      lines(myYears, myVals, type = \"l\", col=gradecols[i])\n      points(myYears, myVals, col=gradecols[i],pch=myPoints)\n      \n      \n      \n    }\n    \n    legend(x=\"topleft\", col=gradecols, lty=1,\n           legend=c(\"Pre-K\", \"K\", grades[-c(1,2)]), ncol=2,\n           border=FALSE, bty=\"n\", pch=myPoints, cex=1)\n    \n    par(mar=c(4,4,0,0))\n    \n    plot(2006:2013, 2006:2013, \n         type=\"n\", ylim=c(0,100), xlim=c(2011,2013),\n         xlab= NA, ylab= \"Consent form return rate\", xaxt=\"n\",\n         cex.axis=1.5)\n    text(x=2012, y = 15, labels=paste0(\"Consent form return rate \"),\n         cex=1.5)\n    text(x= 2012, y = 5, labels = paste0( \"(\", school, \")\"))\n    \n    axis(side=1, at=2011:2013, labels=2011:2013)\n    \n    for (i in 1:length(grades)){\n      \n      myVals <- as.numeric(as.character(ir[which(ir$school == school), paste0(\"cfrr_grade\", grades[i])]))\n      myYears <- as.numeric(as.character(ir$year[which(ir$school == school)]))\n      \n      lines(myYears, myVals,  lty = 1, col=gradecols[i])\n      points(myYears, myVals, col=gradecols[i], pch=myPoints)\n      \n    }\n    \n  }else{\n    \n    if(length(ir$cfrr[which(ir$year == year & ir$school == school)]) == 0){\n      return(NULL)\n    }else{\n    \n    if(!is.na(ir$cfrr[which(ir$year == year & ir$school == school)])){\n      #par(mfrow=c(1,1))\n      tempVals <- vector(length=length(grades), mode=\"numeric\")\n      tempImm <- vector(length=length(grades), mode=\"numeric\")\n      \n      for (i in 1:length(grades)){\n        tempVals[i] <- as.numeric(as.character(ir[which(ir$school == school & \n                                                          ir$year == year),\n                                                  paste0(\"cfrr_grade\", grades[i])]))\n        tempImm[i] <- as.numeric(as.character(ir[which(ir$school == school & \n                                                         ir$year == year),\n                                                 paste0(\"immRate_grade\", grades[i])]))\n        \n      }\n      \n      grades[which(grades == \".1\")] <- \"Pre-K\"\n      grades[which(grades == 0)] <- \"K\"\n      \n      \n      bp <- barplot(tempVals[which(!is.na(tempVals))], \n                    names.arg=grades[which(!is.na(tempVals))],\n                    border=NA, ylim=c(0,100), ylab=\"Percentage\",\n                    xlab=\"Grade\",\n                    main = paste0(school, \" (\", year, \")\"))\n      barplot(tempImm[which(!is.na(tempImm))], \n              col=adjustcolor(\"blue\", alpha.f=0.4), add=TRUE,\n              border=NA)\n      text(bp[,1], tempVals[which(!is.na(tempVals))], pos=1,\n           labels=round(tempVals[which(!is.na(tempVals))], digits=2),\n           col = adjustcolor(\"black\", alpha.f=0.7))\n      text(bp[,1], tempImm[which(!is.na(tempImm))], pos=1,\n           labels=round(tempImm[which(!is.na(tempImm))], digits=2),\n           col = adjustcolor(\"black\", alpha.f=0.7))\n      legend(x=\"topleft\",\n             fill=adjustcolor(c(\"black\", \"blue\"), alpha.f=0.7), \n             legend=c(\"CFRR\", \"IR\"), bty= \"n\", border = FALSE, cex=0.75)\n      \n    }else{return(NULL)}\n    \n\n  }\n  }\n  \n}\n\n#GradeFun(\"B'NAI ISRAEL\", 2011, bar=TRUE)\n\n######################\n# FREE REDUCED LUNCH FUN\n######################\npar(mar=c(5,4,2,1))\nLunchFun <- function(school, year=2013){\n  \n  # THIS DOES ONLY 2013\n  \n  type <- ir$type[which(ir$school == school)][1]\n  \n  frl <- ir$frLunch13[which(ir$school != school & ir$year == year\n                            & ir$type == type)]\n  \n  cfrr <-  ir$cfrr[which(ir$school != school & ir$year == year &\n                           ir$type == type)]\n  \n  \n  \n  frl_school <- ir$frLunch13[which(ir$school == school & ir$year == year)]\n  cfrr_school <-  ir$cfrr[which(ir$school == school & ir$year == year)]\n  \n  \n  schoolcol <- adjustcolor(\"darkred\", alpha.f=0.6)\n  othercol <- adjustcolor(\"black\", alpha.f=0.3)\n  \n  plot(0:100, 0:100, \n       xlab = \"Percent free/reduced lunch\",\n       ylab = \"Consent form return rate\", \n       main = paste0(\"Free/reduced lunch and CFRR (\", year, \")\"),\n       xlim=c(0,100),\n       ylim=c(0,100), type=\"n\")\n  points(frl, cfrr, col=othercol, pch=16, cex = 2)\n  points(frl_school, cfrr_school, pch=16, col=schoolcol, cex=3)\n  \n  legend(x=\"bottomleft\",\n         pt.cex=c(2,3),\n         pch=16,\n         col=c(othercol, schoolcol),\n         legend=c(paste0(school, \" (\", year, \")\"),\n                  paste0(\"Other \", type, \" schools (\", year, \")\")), \n         cex=0.8)\n}\n\n#LunchFun(\"LITTLEWOOD ELEM.\", 2013)\n\n\n#######################\n# CFRR AND IR BY CLASSROOM\n#######################\nScatterFun <- function(school, year=2013){\n  \n\n  \n  type <- as.character(ir$type[which(ir$school == school)][1])\n  \n  newcl <- cl[which(as.character(cl$type) == type & cl$year == year),]\n  schoolcl <- newcl[which(newcl$id == ir$id[which(ir$school == school )][1]),]\n  \n  schoolcol <- adjustcolor(\"darkred\", alpha.f=0.6)\n  othercol <- adjustcolor(\"black\", alpha.f=0.3)\n  \n  meancfrr <- weighted.mean(newcl$cfrr, newcl$Total.Pop, na.rm=T)\n  meanir <- weighted.mean(newcl$immRate, newcl$Total.Pop, na.rm=T)\n  \n  schoolmeancfrr <- weighted.mean(schoolcl$cfrr, schoolcl$Total.Pop, na.rm=T)\n  schoolmeanir <- weighted.mean(schoolcl$immRate, schoolcl$Total.Pop, na.rm=T)\n  \n  \n  plot(0:100, 0:100, \n       xlab = \"CFRR\",\n       ylab = \"IR\", \n       xlim=c(0,100),\n       ylim=c(0,100), type=\"n\")\n  \n  points(newcl$cfrr, newcl$immRate, pch=16, \n       col=adjustcolor(othercol, alpha.f=0.2),\n       cex=(newcl$Total.Pop)^(1)/10)\n  points(schoolcl$cfrr, schoolcl$immRate, \n         col=schoolcol,\n         cex=schoolcl$Total.Pop^(1)/10,\n         pch=16)\n  \n  legend(x=\"bottomleft\",\n         col=c(othercol, schoolcol),\n         pch=16,\n         legend=c(paste0(\"Other \", type, \" schools\"), school),\n         border=FALSE,  cex=0.7)\n  \n  legend(x=\"topleft\",\n         col=c(othercol, schoolcol),\n         lty=1, lwd=3,\n         legend=c(paste0(\"Other \", type, \" schools weighted mean\"), paste0(school, \" mean\")),\n         border=FALSE, bty= \"n\", cex=0.7)\n  \n  \n  abline(h=meanir, col=othercol, lwd=3)\n  abline(v=meancfrr, col=othercol, lwd=3)\n  \n  abline(h=schoolmeanir, col=adjustcolor(schoolcol, alpha.f=0.6), lwd=3)\n  abline(v=schoolmeancfrr, col=adjustcolor(schoolcol, alpha.f=0.6), lwd=3)\n  \n}\n\n#ScatterFun(\"LITTLEWOOD ELEM.\", 2013)\n\n#######################\n# FUNCTION FOR PLOTTING EACH TEAM'S TRAJECTORIES\n#######################\nTeamFun <- function(team, data, cf=FALSE, bar=FALSE){\n  \n  x <- data[which(as.numeric(data[,\"team2014\"]) == as.numeric(team)),]\n  \n  schools <- unique(x$school)   #unique(sort(x$school))\n  mycols <- colorRampPalette(brewer.pal(8, \"Dark2\"))(length(schools)) \n  mycols <- adjustcolor(mycols, alpha.f=0.4)\n  \n  # ASSIGN COLOR\n  x$color <- \"grey\"\n  for (i in 1:length(schools)){    \n    x$color[which(x$school == schools[i])] <- mycols[i]\n  }  \n  \n  \n  if(bar==FALSE & cf==FALSE){\n    plot(x = 2006:2013, \n         y = seq(0,100, length=length(2006:2013)),\n         type = \"n\",\n         xlab = \"Year\",\n         ylab = \"Immunization rate\",\n         ylim=c(0,100), main=\"All years\")\n    \n    # PLOT LINES\n    for (i in 1:length(schools)){\n\n      xx <- x$year[which(x$school == schools[i] )]\n      yy <- x$immRate[which(x$school == schools[i] )]\n      #x$color[which(x$school == schools[i])] <- mycols[i]\n      \n      cc <- x$color[which(x$school == schools[i])][1]\n      lines(xx, yy, col=cc, lwd=1)\n      points(xx, yy, col=cc, pch=16, cex=1)    \n    }  \n    \n    legend(x=\"topleft\",\n           lty=1,\n           lwd=1,\n           pch=16,\n           col=mycols,\n           legend=schools,\n           cex=0.7,\n           bty=\"n\",\n           ncol=3)\n    \n    abline(v=2006:2013, col=adjustcolor(\"black\", alpha.f=0.1))\n    abline(h=seq(0,100,20), col=adjustcolor(\"black\", alpha.f=0.1))  \n  }else if(cf==TRUE & bar==FALSE){\n    \n    x <- x[which(x$year == 2013),]\n    \n    plot(x$cfrr, x$immRate, col=x$color, pch=16,\n         xlim=c(0,100), ylim=c(0,100),\n         cex=3,\n         xlab=\"2013 consent form return rate\",\n         ylab=\"2013 immunization rate\")\n    \n    text(jitter(x$cfrr, factor=5), jitter(x$immRate, factor=5), col=adjustcolor(\"black\", alpha.f=0.6),\n         labels=x$school,\n         cex=0.6)\n    abline(v=seq(0,100,20), col=adjustcolor(\"black\", alpha.f=0.1))\n    abline(h=seq(0,100,20), col=adjustcolor(\"black\", alpha.f=0.1))  \n         \n    \n  }else if(cf==TRUE & bar == TRUE){ \n    x <- x[which(x$year == 2013),]\n    x <- x[order(x$cfrr),]\n    \n    bp <- barplot(x$cfrr, col=x$color, names.arg=x$school, cex.names=0.7,\n                  border=FALSE, las=3, main=\"2013 Consent form return rate\",\n                  ylab=\"Consent form return rate\")\n    \n    text(x=bp[,1], y = x$cfrr, pos=1, labels=round(x$cfrr, digits=2),\n         col=adjustcolor(\"black\", alpha.f=0.5))\n  }else{\n    # BARPLOT\n    \n    x <- x[which(x$year == 2013),]\n    x <- x[order(x$immRate),]\n    \n    bp <- barplot(x$immRate, col=x$color, names.arg=x$school, cex.names=0.7,\n            border=FALSE, las=3, main=\"Last year\",\n            ylab=\"Immunization rate\")\n    \n    text(x=bp[,1], y = x$immRate, pos=1, labels=round(x$immRate, digits=2),\n         col=adjustcolor(\"black\", alpha.f=0.5))\n\n  } \n\n}\n\n#TeamFun(team = 4, data = ir, bar = FALSE)\n#######################\n# PLOT\n# #######################\n# M <- gvisMotionChart(data = ir, \n#                      idvar = \"school\",\n#                      timevar = \"year\")\n# , \n#                      idvar = \"school\", \n#                      timevar = \"year\",\n#                      #xvar = \"year\",\n#                      #yvar = \"immRate\",\n#                      colorvar = \"team2014\",\n#                      sizevar = \"totMem\")\n# plot(M)\n# \n# M <- gvisMotionChart(data = ir, idvar=\"school\", timevar=\"year\")\n# \n# \n# plot(M)\n\n#######################\n#\n#######################\n\n\n#######################\n#\n#######################",
    "created" : 1409246879260.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "142879804",
    "id" : "ABCAAF73",
    "lastKnownWriteTime" : 1409257924,
    "path" : "~/ShinyApps/controlfluteams/helper.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}