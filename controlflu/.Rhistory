#                      yvar = "immRate",
#                      colorvar = "team2014",
#                      sizevar = "totMem")
# plot(M)
#
# M <- gvisMotionChart(data = ir, idvar="school", timevar="year")
#
#
# plot(M)
#######################
#
#######################
#######################
#
#######################
head(ir)
#######################
# ATTACH LIBRARIES
#######################
library(RCurl)
library(RColorBrewer)
suppressPackageStartupMessages(library(googleVis))
library(reshape)
library(reldist)
#######################
# READ IN IMMUNIZATION HISTORY FROM GOOGLE
#######################
myLink <- "https://docs.google.com/spreadsheets/d/1rJrZwc9KmQsa2a7bOAX4wvPLc2p4lEtiuvxyufmE070/export?&format=csv"
options(RCurlOptions = list(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl")))
myCsv <- getURL(myLink)
ir <- read.csv(textConnection(myCsv), skip=0)
rm(myCsv, myLink)
ir$team2014 <- factor(ir$team2014)
#######################
# PLOT
#######################
# M <- gvisMotionChart(data = ir,
#                      idvar = "school",
#                      timevar = "year",
#                      xvar = "year",
#                      yvar = "immRate",
#                      colorvar = "team2014",
#                      sizevar = "totMem")
# plot(M)
#
# M <- gvisMotionChart(data = ir, idvar="school", timevar="year")
#
#
# plot(M)
#######################
#
#######################
#######################
#
#######################
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
names(ir)
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
order(ir$immRate)
sort(ir$immRate)
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
order(ir$immRate)
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
setwd("C:/Users/BrewJR/Documents/ShinyApps/controlflu/dirty")
library(plyr)
ir <- read.csv("ir.csv")
# READ CFRR
cf <- read.csv("cfrr.csv")
cf$school <- as.character(gsub("^\\s+|\\s+$", "", cf$school_bad))
# READ CLASS CFRR AND IR DATA
cl <- read.csv("class.csv")
cl$school <- as.character(gsub("^\\s+|\\s+$", "", cl$School))
# FIX UP CL
library(car)
cl$school <- recode(cl$school,
"'Alachua ES' = 'Alachua';
'AQ Jones' = 'A Quinn';
'Archer Elem' = 'Archer';
'Finely' = 'Finley';
'Ft Clarke' = 'Ft. Clarke';
'GHS' = 'Gainesville';
'Glenn Springs' = 'Glen Springs';
'GlennSprings' = 'Glen Springs';
'HiddenOak' = 'Hidden Oak';
'High Springs' = 'High Spr. Comm.';
'High Springs Community' = 'High Spr. Comm.';
'HighSprings' = 'High Spr. Comm.';
'JJ Finley' = 'Finley';
'LakeForest' = 'Lake Forest';
'LittleWood' = 'Littlewood';
'Mabane' = 'Mebane';
'Metcalf' = 'Metcalfe';
'Oakview' = 'Oak View';
'OakView' = 'Oak View';
'SantaFe' = 'Santa Fe';
'WestWood' = 'Westwood'
")
# GET ID FOR EVERY SCHOOL IN CL
cl <- join(x = cl,
y= cf,
type = "left",
by = "school",
match = "first")
# MERGE CFRR TO IR
#cf$school_bad <- NULL
ir <- join(x = ir,
y = cf,
by = "id",
type = "left",
match = "first")
# CONVERT ir$cfrr to percentage
ir$cfrr <- ir$cfrr*100
# CLEAN UP
cf$school_bad <- NULL
# ADD LOTS OF THINGS TO IR
#Create grade columns
for (i in unique(sort(cl$Grade))){
ir[,paste0("cfrr_grade",i)] <- NA
}
#POPULATE GRADE COLUMNS
for (i in unique(sort(cl$Grade))){
for (j in unique(ir$id)){
for (k in unique(sort(ir$year))){
ir[which(ir$year == k & ir$id == j), paste0("cfrr_grade", i)] <-
weighted.mean(cl$cfrr[which(cl$id == j & cl$year == k & cl$Grade == i)],
cl$Total.Pop[which(cl$id == j & cl$year == k & cl$Grade == i)])
}
}
}
head(ir)
head(cl)
#Create grade columns - immRate
for (i in unique(sort(cl$Grade))){
ir[,paste0("immRate_grade",i)] <- NA
}
#POPULATE GRADE COLUMNS - immRate
for (i in unique(sort(cl$Grade))){
for (j in unique(ir$id)){
for (k in unique(sort(ir$year))){
ir[which(ir$year == k & ir$id == j), paste0("immRate_grade", i)] <-
weighted.mean(cl$immRate[which(cl$id == j & cl$year == k & cl$Grade == i)],
cl$Total.Pop[which(cl$id == j & cl$year == k & cl$Grade == i)])
}
}
}
head(ir)
View(ir)
head(cf)
setwd("C:/Users/BrewJR/Documents/ShinyApps/controlflu/")
write.csv(cf, "cfrr.csv")
write.csv(ir, "ir.csv")
setwd("C:/Users/BrewJR/Documents/ShinyApps/controlflu")
ir <- read.csv("ir.csv")
cf <- read.csv("cf.csv")
cf <- read.csv("cfrr.csv")
head(cf)
head(ir)
plot(ir$cfrr_grade1, ir$immRate_grade1)
setwd("C:/Users/BrewJR/Documents/ShinyApps/controlflu/dirty")
library(plyr)
ir <- read.csv("ir.csv")
# READ CFRR
cf <- read.csv("cfrr.csv")
cf$school <- as.character(gsub("^\\s+|\\s+$", "", cf$school_bad))
# READ CLASS CFRR AND IR DATA
cl <- read.csv("class.csv")
cl$school <- as.character(gsub("^\\s+|\\s+$", "", cl$School))
# FIX UP CL
library(car)
cl$school <- recode(cl$school,
"'Alachua ES' = 'Alachua';
'AQ Jones' = 'A Quinn';
'Archer Elem' = 'Archer';
'Finely' = 'Finley';
'Ft Clarke' = 'Ft. Clarke';
'GHS' = 'Gainesville';
'Glenn Springs' = 'Glen Springs';
'GlennSprings' = 'Glen Springs';
'HiddenOak' = 'Hidden Oak';
'High Springs' = 'High Spr. Comm.';
'High Springs Community' = 'High Spr. Comm.';
'HighSprings' = 'High Spr. Comm.';
'JJ Finley' = 'Finley';
'LakeForest' = 'Lake Forest';
'LittleWood' = 'Littlewood';
'Mabane' = 'Mebane';
'Metcalf' = 'Metcalfe';
'Oakview' = 'Oak View';
'OakView' = 'Oak View';
'SantaFe' = 'Santa Fe';
'WestWood' = 'Westwood'
")
# GET ID FOR EVERY SCHOOL IN CL
cl <- join(x = cl,
y= cf,
type = "left",
by = "school",
match = "first")
# MERGE CFRR TO IR
#cf$school_bad <- NULL
ir <- join(x = ir,
y = cf,
by = "id",
type = "left",
match = "first")
# CONVERT ir$cfrr to percentage
ir$cfrr <- ir$cfrr*100
# CLEAN UP
cf$school_bad <- NULL
# ADD LOTS OF THINGS TO IR
#Create grade columns - cfrr
for (i in unique(sort(cl$Grade))){
ir[,paste0("cfrr_grade",i)] <- NA
}
#POPULATE GRADE COLUMNS - cfrr
for (i in unique(sort(cl$Grade))){
for (j in unique(ir$id)){
for (k in unique(sort(ir$year))){
ir[which(ir$year == k & ir$id == j), paste0("cfrr_grade", i)] <-
weighted.mean(cl$cfrr[which(cl$id == j & cl$year == k & cl$Grade == i)],
cl$Total.Pop[which(cl$id == j & cl$year == k & cl$Grade == i)])
}
}
}
#Create grade columns - immRate
for (i in unique(sort(cl$Grade))){
ir[,paste0("immRate_grade",i)] <- NA
}
#POPULATE GRADE COLUMNS - immRate
for (i in unique(sort(cl$Grade))){
for (j in unique(ir$id)){
for (k in unique(sort(ir$year))){
ir[which(ir$year == k & ir$id == j), paste0("immRate_grade", i)] <-
weighted.mean(cl$immRate[which(cl$id == j & cl$year == k & cl$Grade == i)],
cl$Total.Pop[which(cl$id == j & cl$year == k & cl$Grade == i)])
}
}
}
head(cf)
head(ir)
ir$x <- NULL
ir$school_bad <- NULL
ir$team2014.1 <- NULL
ir$school.1 <- NULL
head(ir)
setwd("C:/Users/BrewJR/Documents/ShinyApps/controlflu/")
write.csv(cf, "cfrr.csv")
write.csv(ir, "ir.csv")
setwd("C:/Users/BrewJR/Documents/ShinyApps/controlflu")
ir <- read.csv("ir.csv")
cf <- read.csv("cfrr.csv")
#make team factor
ir$team2014 <- factor(ir$team2014)
head(ir)
ir$cfrr_grade.1
-1:12
head(ir)
plot(x = 2006:2013,
y = seq(0,100, length=length(2006:2013)),
type = "n",
xlab = "Year",
ylab = "Immunization rate",
ylim=c(0,100), main="All years")
lines(ir$year[which(ir$team == 2), paste0("cfrr_grade", 5)],
ir$immRate[which(ir$team == 2), paste0("cfrr_grade", 5)])
lines(ir$year[which(ir$team == 2), paste0("cfrr_grade", 5)][1],
ir$immRate[which(ir$team == 2), paste0("cfrr_grade", 5)][1])
library(leaflet)
install.packages("leaflet")
library(rcharts)
install.packages("rcharts")
require(devtools)
install_github('rCharts', 'ramnathv')
library(rCharts)
## Example 1 Facetted Scatterplot
names(iris) = gsub("\\.", "", names(iris))
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
## Example 2 Facetted Barplot
hair_eye = as.data.frame(HairEyeColor)
rPlot(Freq ~ Hair | Eye, color = 'Eye', data = hair_eye, type = 'bar')
r1 <- rPlot(mpg ~ wt | am + vs, data = mtcars, type = "point", color = "gear")
r1$print("chart1")
map3 <- Leaflet$new()
map3$setView(c(51.505, -0.09), zoom = 13)
map3$marker(c(51.5, -0.09), bindPopup = "<p> Hi. I am a popup </p>")
map3$marker(c(51.495, -0.083), bindPopup = "<p> Hi. I am another popup </p>")
map3$print("chart7")
map3 <- Leaflet$new()
map3$setView(c(51.505, -0.09), zoom = 13)
map3$marker(c(51.5, -0.09), bindPopup = "<p> Hi. I am a popup </p>")
map3$marker(c(51.495, -0.083), bindPopup = "<p> Hi. I am another popup </p>")
map3$print("chart7")
map3
chart7
str(map3)
map3
ir$year[which(ir$team == 2), paste0("cfrr_grade", 5)]
ir$year[which(ir$team == 2), paste0("cfrr_grade", 5)]
ir$year
ir[which(ir$team == 2), paste0("cfrr_grade", 5)]
ids <- unique(sort(x$id))
x <- ir[which(ir$team2014 == 2),]
ids <- unique(sort(x$id))
x[which(x$id == ids[2]), paste0("cfrr_grade", 5)]
plot(x = 2006:2013,
y = seq(0,100, length=length(2006:2013)),
type = "n",
xlab = "Year",
ylab = "Immunization rate",
ylim=c(0,100), main="All years")
lines(x[which(x$id == ids[2]), paste0("cfrr_grade", 5)][1],
x[which(x$id == ids[2]), paste0("cfrr_grade", 5)][1])
lines(x[which(x$id == ids[2]), paste0("cfrr_grade", 5)],
x[which(x$id == ids[2]), paste0("cfrr_grade", 5)])
ids <- unique(sort(x$id))
ids
ir$school[which(ir$id == 121)]
lines(x[which(x$id == ids[2]), paste0("cfrr_grade", 7)],
x[which(x$id == ids[2]), paste0("cfrr_grade", 7)])
ids[2]
ids[1]
ir$school[which(ir$id == 112)]
lines(x[which(x$id == ids[1]), paste0("cfrr_grade", 7)],
x[which(x$id == ids[1]), paste0("cfrr_grade", 7)])
x[which(x$id == ids[1]), paste0("cfrr_grade", 7)]
lines(x[which(x$id == ids[1]), paste0("year")],
x[which(x$id == ids[1]), paste0("cfrr_grade", 7)])
names(ir)
plot(x = 2006:2013,
y = seq(0,100, length=length(2006:2013)),
type = "n",
xlab = "Year",
ylab = "Immunization rate",
ylim=c(0,100), main="All years")
x <- ir[which(ir$team2014 == 2),]
ids <- unique(sort(x$id))
grades <- -1:12
for (i in ids){
for (j in grades){
lines(x[which(x$id == ids[i]), paste0("year")],
x[which(x$id == ids[i]), paste0("cfrr_grade", j)])
}
}
lines(x[which(x$id == ids[1]), paste0("year")],
x[which(x$id == ids[1]), paste0("cfrr_grade", 7)])
grades()
grades
summary(ir$Grade)
names(ir)
paste0("cfrr_grade", 7)]
paste0("cfrr_grade", 7)
x <- ir[which(ir$team2014 == 3),]
ids <- unique(sort(x$id))
grades <- -1:12
lines(x[which(x$id == ids[1]), paste0("year")],
x[which(x$id == ids[1]), paste0("cfrr_grade", 7)])
x[which(x$id == ids[1]), paste0("year")]
x[which(x$id == ids[1]), paste0("cfrr_grade", 7)]
ids
ir$school[which(ir$id == 91)]
lines(x[which(x$id == ids[1]), paste0("year")],
x[which(x$id == ids[1]), paste0("cfrr_grade", 3)])
for (i in ids){
for (j in grades){
lines(x[which(x$id == ids[i]), paste0("year")],
x[which(x$id == ids[i]), paste0("cfrr_grade", j)])
}
}
map3 <- Leaflet$new()
L1$tileLayer(provider = 'Stamen.TonerLite')
map3$setView(c(51.505, -0.09), zoom = 13)
map3$marker(c(51.5, -0.09), bindPopup = "<p> Hi. I am a popup </p>")
map3$marker(c(51.495, -0.083), bindPopup = "<p> Hi. I am another popup </p>")
map3$print("chart7")
map3
map3$tileLayer(provider = 'Stamen.TonerLite')
map3
ids
grades
plot(x = 2006:2013,
y = seq(0,100, length=length(2006:2013)),
type = "n",
xlab = "Year",
ylab = "Immunization rate",
ylim=c(0,100), main="All years")
x <- ir[which(ir$team2014 == 4),]
ids <- unique(sort(x$id))
grades <- -1:12
lines(x[which(x$id == ids[1]), paste0("year")],
x[which(x$id == ids[1]), paste0("cfrr_grade", 3)])
ids
ir$school[which(ir$id == 52)]
lines(x[which(x$id == ids[1]), paste0("year")],
x[which(x$id == ids[1]), paste0("cfrr_grade", 4)])
lines(x[which(x$id == ids[1]), paste0("year")],
x[which(x$id == ids[1]), paste0("cfrr_grade", 5)])
ids
ir$school[which(ir$id == 71)]
ir$school[which(ir$id == 101)]
lines(x[which(x$id == ids[2]), paste0("year")],
x[which(x$id == ids[2]), paste0("cfrr_grade", 5)])
lines(x[which(x$id == ids[2]), paste0("year")],
x[which(x$id == ids[2]), paste0("cfrr_grade", 4)])
lines(x[which(x$id == ids[2]), paste0("year")],
x[which(x$id == ids[2]), paste0("cfrr_grade", 3)])
lines(x[which(x$id == ids[2]), paste0("year")],
x[which(x$id == ids[2]), paste0("cfrr_grade", 2)])
library(googleVis)
gvisMotionChart(data = x,
idvar = "school",
timevar = "year",
xvar = "year",
yvar = "immRate",
colorvar = "cfrr",
sizevar = "totMem")
x <- gvisMotionChart(data = x,
idvar = "school",
timevar = "year",
xvar = "year",
yvar = "immRate",
colorvar = "cfrr",
sizevar = "totMem")
plot(x)
plot(x)
names(ir)
for (i in -1:12){
for (j in c("cfrr", "immRate")){
ir[,paste0(j,"_",i)] <-
factor(ir[,paste0(j,"_",i)])
}
}
for (i in -1:12){
for (j in c("cfrr", "immRate")){
ir[,paste0(j,"_",i)] <-
factor(ir[,paste0(j,"_grade",i)])
}
}
names(ir)
for (i in -1:12){
for (j in c("cfrr", "immRate")){
ir[,paste0(j,"_grade",i)] <-
factor(ir[,paste0(j,"_grade",i)])
}
}
head(ir)
for (i in -1:12){
ir[,paste0("cfrr","_grade",i)] <-
factor(ir[,paste0("cfrr","_grade",i)])
}
#Make grade columns factors
for (i in 0:12){
ir[,paste0("cfrr","_grade",i)] <-
factor(ir[,paste0("cfrr","_grade",i)])
}
for (i in 0:12){
for (j in c("cfrr", "immRate")){
ir[,paste0(j,"_grade",i)] <-
factor(ir[,paste0(j,"_grade",i)])
}
}
ir$cfrr_grade.1 <- factor(ir$cfrr_grade.1)
ir$immRate_grade.1 <- factor(ir$immRate_grade.1)
head(ir)
shiny::runApp()
shiny::runApp()
