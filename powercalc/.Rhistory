area.under.curve <- auc(x = auc.x,
y = auc.y)
} else{
auc.x <- vector(length = 100, type = "numeric")
auc.y <- vector(length = 100, type = "numeric")
seq.vec <- seq(0,1, length=100)
for (cutoff in 1:100){
test.data[,"g5.predicted"] <- ifelse(x > seq.vec[cutoff], "predicted.true", "predicted.false")
test.data[,"g5.observed"] <- ifelse(test.data[,"bll5"] == "TRUE",  "observed.true", "observed.false") #bll"] > 5
########
truth.table <- table(test.data[,"g5.predicted"], test.data[,"g5.observed"])
truth.table
truth <- prop.table(truth.table, 1)*100
true.positives <- length(test.data[,"g5.predicted"][which(test.data[,"g5.predicted"] == "predicted.true" &
test.data[,"g5.observed"] == "observed.true")])
false.positives <- length(test.data[,"g5.predicted"][which(test.data[,"g5.predicted"] == "predicted.true" &
test.data[,"g5.observed"] == "observed.false")])
false.negatives <- length(test.data[,"g5.predicted"][which(test.data[,"g5.predicted"] == "predicted.false" &
test.data[,"g5.observed"] == "observed.true")])
true.negatives <- length(test.data[,"g5.predicted"][which(test.data[,"g5.predicted"] == "predicted.false" &
test.data[,"g5.observed"] == "observed.false")])
sensitivity <-  true.positives / (true.positives + false.negatives)
specificity <- true.negatives / (true.negatives + false.positives)
ppv <- true.positives / (true.positives + false.positives)
npv <- true.negatives / (true.negatives + false.negatives)
auc.x[i] <- 1 - specificity
auc.y[i] <- sensitivity
}
area.under.curve <- auc(x = auc.x,
y = auc.y)
}
###### !!!!!!!!!!!!!!!!
if(tree){
x <- predict(model, test.data, type="prob")
x <- as.numeric(x[,2])
} else{
x <- predict(model, test.data, type="response")
}
if(type == "cont"){
if(!is.null(threshold)){
############ THRESHOLD
test.data$g5.predicted <- ifelse(x > threshold, "predicted.true", "predicted.false")
test.data$g5.observed <- ifelse(test.data$bll5 == "TRUE", "observed.true", "observed.false") # bll > 5
} else{
test.data$g5.predicted <- ifelse(x > 5, "predicted.true", "predicted.false")
test.data$g5.observed <- ifelse(test.data$bll5 == "TRUE", "observed.true", "observed.false") # bll > 5
}
truth.table <- table(test.data[,"g5.predicted"], test.data[,"g5.observed"])
truth.table
truth <- prop.table(truth.table, 1)*100
true.positives <- length(test.data[,"g5.predicted"][which(test.data[,"g5.predicted"] == "predicted.true" &
test.data[,"g5.observed"] == "observed.true")])
false.positives <- length(test.data[,"g5.predicted"][which(test.data[,"g5.predicted"] == "predicted.true" &
test.data[,"g5.observed"] == "observed.false")])
false.negatives <- length(test.data[,"g5.predicted"][which(test.data[,"g5.predicted"] == "predicted.false" &
test.data[,"g5.observed"] == "observed.true")])
true.negatives <- length(test.data[,"g5.predicted"][which(test.data[,"g5.predicted"] == "predicted.false" &
test.data[,"g5.observed"] == "observed.false")])
sensitivity <-  true.positives / (true.positives + false.negatives)
specificity <- true.negatives / (true.negatives + false.positives)
ppv <- true.positives / (true.positives + false.positives)
npv <- true.negatives / (true.negatives + false.negatives)
false.positive.rate <-
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true" &
test.data$g5.observed == "observed.false")]) /
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true")])
true.positive.rate <-
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true" &
test.data$g5.observed == "observed.true")]) /
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true")])
false.negative.rate <-
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false" &
test.data$g5.observed == "observed.true")]) /
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false")])
true.negative.rate <-
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false" &
test.data$g5.observed == "observed.false")]) /
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false")])
cat(paste0("Sensitivity: ", round(sensitivity, digits=2)), "\n")
cat(paste0("Specificity: ", round(specificity, digits=2)), "\n\n")
cat(paste0("PPV: ", round(ppv, digits=2)), "\n")
cat(paste0("NPV: ", round(npv, digits =2)), "\n\n")
cat(paste0("True positive rate: ", round(true.positive.rate*100, digits=2), "%" ), "\n")
cat(paste0("True negative rate: ", round(true.negative.rate*100, digits=2), "%" ), "\n\n")
cat(paste0("False positive rate: ", round(false.positive.rate*100, digits=2), "%" ), "\n")
cat(paste0("False negative rate: ", round(false.negative.rate*100, digits=2), "%" ), "\n\n")
cat(paste0("At a threshold of ", threshold,
",\nwe would inspect the homes of\n",
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true")]),
" children, \nand would find that ",
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true" &
test.data$g5.observed == "observed.true")]),
"\nof them have BLL > 5.\n"))
cat(paste0("AUC: ", area.under.curve))
if(show.truth){
cat(paste0("\n"))
print(truth.table)
print(prop.table(truth.table, 1)*100)
}
}else{
if(!is.null(threshold)){
############ THRESHOLD
test.data$g5.predicted <- ifelse(x > threshold, "predicted.true", "predicted.false")
test.data$g5.observed <- ifelse(test.data$bll5 == "TRUE", "observed.true", "observed.false") # bll > 5
}
truth.table <- table(test.data$g5.predicted, test.data$g5.observed)
truth.table
truth <- prop.table(truth.table, 1)*100
true.positives <- length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true" &
test.data$g5.observed == "observed.true")])
false.positives <- length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true" &
test.data$g5.observed == "observed.false")])
false.negatives <- length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false" &
test.data$g5.observed == "observed.true")])
true.negatives <- length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false" &
test.data$g5.observed == "observed.false")])
sensitivity <-  true.positives / (true.positives + false.negatives)
specificity <- true.negatives / (true.negatives + false.positives)
ppv <- true.positives / (true.positives + false.positives)
npv <- true.negatives / (true.negatives + false.negatives)
false.positive.rate <-
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true" &
test.data$g5.observed == "observed.false")]) /
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true")])
true.positive.rate <-
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true" &
test.data$g5.observed == "observed.true")]) /
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true")])
false.negative.rate <-
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false" &
test.data$g5.observed == "observed.true")]) /
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false")])
true.negative.rate <-
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false" &
test.data$g5.observed == "observed.false")]) /
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false")])
cat(paste0("Sensitivity: ", round(sensitivity, digits=2)), "\n")
cat(paste0("Specificity: ", round(specificity, digits=2)), "\n\n")
cat(paste0("PPV: ", round(ppv, digits=2)), "\n")
cat(paste0("NPV: ", round(npv, digits =2)), "\n\n")
cat(paste0("True positive rate: ", round(true.positive.rate*100, digits=2), "%" ), "\n")
cat(paste0("True negative rate: ", round(true.negative.rate*100, digits=2), "%" ), "\n\n")
cat(paste0("False positive rate: ", round(false.positive.rate*100, digits=2), "%" ), "\n")
cat(paste0("False negative rate: ", round(false.negative.rate*100, digits=2), "%" ), "\n\n")
cat(paste0("At a threshold of ", threshold,
",\nwe would inspect the homes of\n",
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true")]),
" children, \nand would find that ",
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true" &
test.data$g5.observed == "observed.true")]),
"\nof them have BLL > 5.\n"))
cat(paste0("AUC: ", area.under.curve))
if(show.truth){
cat(paste0("\n"))
print(truth.table)
print(prop.table(truth.table, 1)*100)
}
############## \ THRESHOLD
}
### <PLOT>> ####################################
if(plot){
plot(0:1, 0:1,
xlab = "False positive rate",
ylab = "True positive rate",
type="n",
xlim=if(text){wide.lim}else{c(0,1)},
ylim=if(text){wide.lim}else{c(0,1)},
xaxt="n",
yaxt="n")
axis(side = 1,
at = seq(0,1, 0.2),
labels = seq(0, 1, 0.2))
axis(side = 2,
at = seq(0,1, 0.2),
labels = seq(0, 1, 0.2),
las = 1)
l.col <- adjustcolor("black", alpha.f=0.4)
lines(0:1, 0:1, col=adjustcolor("black", alpha.f=0.5),
lwd=3)
lines(c(0,0),
c(0,1), col = l.col)
lines(c(0,1),
c(0,0), col = l.col)
lines(c(1,1),
c(0,1), col = l.col)
lines(c(0,1),
c(1,1), col = l.col)
if(label.points == FALSE){
points(x = 1 - specificity,
y = sensitivity,
pch=20,
col=adjustcolor("darkblue", alpha.f=0.6))
}
### <NO THRESHOLD>
if(type == "cont"){
if(text){
text(x = 1 - specificity,
y = sensitivity,
labels = paste0(seq.vec[cutoff]),
cex=cex,
col=adjustcolor("black", alpha.f=0.6),
pos=4)
} else{
points(x = 1 - specificity,
y = sensitivity,
cex=cex,
col=adjustcolor("darkred", alpha.f=0.9),
pch=16)
}
} else{
if(text){
text(x = 1 - specificity,
y = sensitivity,
labels = paste0(seq.vec[cutoff]),
cex=cex,
col=adjustcolor("black", alpha.f=0.6),
pos=4)
} else{
points(x = 1 - specificity,
y = sensitivity,
cex=cex,
col=adjustcolor("darkred", alpha.f=0.9),
pch=16)
}
}
}
}
#############
# WRITE FUNCTION FOR TESTING MODELS
#############
TestModel <- function(model,
plot=TRUE,
label.points=TRUE,
test.data = test, # test data set
threshold = NULL,
text=TRUE,
cex=0.5,
tree=FALSE,
show.truth=FALSE,
type = "class"){
wide.lim <- c(-0.2, 1.2)
####### !!!!!!!!!!!!!!
if(type == "cont"){
auc.x <- vector(length = 100, mode = "numeric")
auc.y <- vector(length = 100, mode = "numeric")
seq.vec <- seq(0,10, length=100)
for (cutoff in 1:100){
test.data[,"g5.predicted"] <- ifelse(x > seq.vec[cutoff], "predicted.true", "predicted.false")
test.data[,"g5.observed"] <- ifelse(test.data[,"bll5"] == "TRUE",  "observed.true", "observed.false") #bll"] > 5
########
truth.table <- table(test.data[,"g5.predicted"], test.data[,"g5.observed"])
truth.table
truth <- prop.table(truth.table, 1)*100
true.positives <- length(test.data[,"g5.predicted"][which(test.data[,"g5.predicted"] == "predicted.true" &
test.data[,"g5.observed"] == "observed.true")])
false.positives <- length(test.data[,"g5.predicted"][which(test.data[,"g5.predicted"] == "predicted.true" &
test.data[,"g5.observed"] == "observed.false")])
false.negatives <- length(test.data[,"g5.predicted"][which(test.data[,"g5.predicted"] == "predicted.false" &
test.data[,"g5.observed"] == "observed.true")])
true.negatives <- length(test.data[,"g5.predicted"][which(test.data[,"g5.predicted"] == "predicted.false" &
test.data[,"g5.observed"] == "observed.false")])
sensitivity <-  true.positives / (true.positives + false.negatives)
specificity <- true.negatives / (true.negatives + false.positives)
ppv <- true.positives / (true.positives + false.positives)
npv <- true.negatives / (true.negatives + false.negatives)
auc.x[i] <- 1 - specificity
auc.y[i] <- sensitivity
}
area.under.curve <- auc(x = auc.x,
y = auc.y)
} else{
auc.x <- vector(length = 100, mode = "numeric")
auc.y <- vector(length = 100, mode = "numeric")
seq.vec <- seq(0,1, length=100)
for (cutoff in 1:100){
test.data[,"g5.predicted"] <- ifelse(x > seq.vec[cutoff], "predicted.true", "predicted.false")
test.data[,"g5.observed"] <- ifelse(test.data[,"bll5"] == "TRUE",  "observed.true", "observed.false") #bll"] > 5
########
truth.table <- table(test.data[,"g5.predicted"], test.data[,"g5.observed"])
truth.table
truth <- prop.table(truth.table, 1)*100
true.positives <- length(test.data[,"g5.predicted"][which(test.data[,"g5.predicted"] == "predicted.true" &
test.data[,"g5.observed"] == "observed.true")])
false.positives <- length(test.data[,"g5.predicted"][which(test.data[,"g5.predicted"] == "predicted.true" &
test.data[,"g5.observed"] == "observed.false")])
false.negatives <- length(test.data[,"g5.predicted"][which(test.data[,"g5.predicted"] == "predicted.false" &
test.data[,"g5.observed"] == "observed.true")])
true.negatives <- length(test.data[,"g5.predicted"][which(test.data[,"g5.predicted"] == "predicted.false" &
test.data[,"g5.observed"] == "observed.false")])
sensitivity <-  true.positives / (true.positives + false.negatives)
specificity <- true.negatives / (true.negatives + false.positives)
ppv <- true.positives / (true.positives + false.positives)
npv <- true.negatives / (true.negatives + false.negatives)
auc.x[i] <- 1 - specificity
auc.y[i] <- sensitivity
}
area.under.curve <- auc(x = auc.x,
y = auc.y)
}
###### !!!!!!!!!!!!!!!!
if(tree){
x <- predict(model, test.data, type="prob")
x <- as.numeric(x[,2])
} else{
x <- predict(model, test.data, type="response")
}
if(type == "cont"){
if(!is.null(threshold)){
############ THRESHOLD
test.data$g5.predicted <- ifelse(x > threshold, "predicted.true", "predicted.false")
test.data$g5.observed <- ifelse(test.data$bll5 == "TRUE", "observed.true", "observed.false") # bll > 5
} else{
test.data$g5.predicted <- ifelse(x > 5, "predicted.true", "predicted.false")
test.data$g5.observed <- ifelse(test.data$bll5 == "TRUE", "observed.true", "observed.false") # bll > 5
}
truth.table <- table(test.data[,"g5.predicted"], test.data[,"g5.observed"])
truth.table
truth <- prop.table(truth.table, 1)*100
true.positives <- length(test.data[,"g5.predicted"][which(test.data[,"g5.predicted"] == "predicted.true" &
test.data[,"g5.observed"] == "observed.true")])
false.positives <- length(test.data[,"g5.predicted"][which(test.data[,"g5.predicted"] == "predicted.true" &
test.data[,"g5.observed"] == "observed.false")])
false.negatives <- length(test.data[,"g5.predicted"][which(test.data[,"g5.predicted"] == "predicted.false" &
test.data[,"g5.observed"] == "observed.true")])
true.negatives <- length(test.data[,"g5.predicted"][which(test.data[,"g5.predicted"] == "predicted.false" &
test.data[,"g5.observed"] == "observed.false")])
sensitivity <-  true.positives / (true.positives + false.negatives)
specificity <- true.negatives / (true.negatives + false.positives)
ppv <- true.positives / (true.positives + false.positives)
npv <- true.negatives / (true.negatives + false.negatives)
false.positive.rate <-
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true" &
test.data$g5.observed == "observed.false")]) /
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true")])
true.positive.rate <-
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true" &
test.data$g5.observed == "observed.true")]) /
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true")])
false.negative.rate <-
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false" &
test.data$g5.observed == "observed.true")]) /
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false")])
true.negative.rate <-
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false" &
test.data$g5.observed == "observed.false")]) /
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false")])
cat(paste0("Sensitivity: ", round(sensitivity, digits=2)), "\n")
cat(paste0("Specificity: ", round(specificity, digits=2)), "\n\n")
cat(paste0("PPV: ", round(ppv, digits=2)), "\n")
cat(paste0("NPV: ", round(npv, digits =2)), "\n\n")
cat(paste0("True positive rate: ", round(true.positive.rate*100, digits=2), "%" ), "\n")
cat(paste0("True negative rate: ", round(true.negative.rate*100, digits=2), "%" ), "\n\n")
cat(paste0("False positive rate: ", round(false.positive.rate*100, digits=2), "%" ), "\n")
cat(paste0("False negative rate: ", round(false.negative.rate*100, digits=2), "%" ), "\n\n")
cat(paste0("At a threshold of ", threshold,
",\nwe would inspect the homes of\n",
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true")]),
" children, \nand would find that ",
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true" &
test.data$g5.observed == "observed.true")]),
"\nof them have BLL > 5.\n"))
cat(paste0("AUC: ", area.under.curve))
if(show.truth){
cat(paste0("\n"))
print(truth.table)
print(prop.table(truth.table, 1)*100)
}
}else{
if(!is.null(threshold)){
############ THRESHOLD
test.data$g5.predicted <- ifelse(x > threshold, "predicted.true", "predicted.false")
test.data$g5.observed <- ifelse(test.data$bll5 == "TRUE", "observed.true", "observed.false") # bll > 5
}
truth.table <- table(test.data$g5.predicted, test.data$g5.observed)
truth.table
truth <- prop.table(truth.table, 1)*100
true.positives <- length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true" &
test.data$g5.observed == "observed.true")])
false.positives <- length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true" &
test.data$g5.observed == "observed.false")])
false.negatives <- length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false" &
test.data$g5.observed == "observed.true")])
true.negatives <- length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false" &
test.data$g5.observed == "observed.false")])
sensitivity <-  true.positives / (true.positives + false.negatives)
specificity <- true.negatives / (true.negatives + false.positives)
ppv <- true.positives / (true.positives + false.positives)
npv <- true.negatives / (true.negatives + false.negatives)
false.positive.rate <-
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true" &
test.data$g5.observed == "observed.false")]) /
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true")])
true.positive.rate <-
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true" &
test.data$g5.observed == "observed.true")]) /
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true")])
false.negative.rate <-
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false" &
test.data$g5.observed == "observed.true")]) /
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false")])
true.negative.rate <-
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false" &
test.data$g5.observed == "observed.false")]) /
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.false")])
cat(paste0("Sensitivity: ", round(sensitivity, digits=2)), "\n")
cat(paste0("Specificity: ", round(specificity, digits=2)), "\n\n")
cat(paste0("PPV: ", round(ppv, digits=2)), "\n")
cat(paste0("NPV: ", round(npv, digits =2)), "\n\n")
cat(paste0("True positive rate: ", round(true.positive.rate*100, digits=2), "%" ), "\n")
cat(paste0("True negative rate: ", round(true.negative.rate*100, digits=2), "%" ), "\n\n")
cat(paste0("False positive rate: ", round(false.positive.rate*100, digits=2), "%" ), "\n")
cat(paste0("False negative rate: ", round(false.negative.rate*100, digits=2), "%" ), "\n\n")
cat(paste0("At a threshold of ", threshold,
",\nwe would inspect the homes of\n",
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true")]),
" children, \nand would find that ",
length(test.data$g5.predicted[which(test.data$g5.predicted == "predicted.true" &
test.data$g5.observed == "observed.true")]),
"\nof them have BLL > 5.\n"))
cat(paste0("AUC: ", area.under.curve))
if(show.truth){
cat(paste0("\n"))
print(truth.table)
print(prop.table(truth.table, 1)*100)
}
############## \ THRESHOLD
}
### <PLOT>> ####################################
if(plot){
plot(0:1, 0:1,
xlab = "False positive rate",
ylab = "True positive rate",
type="n",
xlim=if(text){wide.lim}else{c(0,1)},
ylim=if(text){wide.lim}else{c(0,1)},
xaxt="n",
yaxt="n")
axis(side = 1,
at = seq(0,1, 0.2),
labels = seq(0, 1, 0.2))
axis(side = 2,
at = seq(0,1, 0.2),
labels = seq(0, 1, 0.2),
las = 1)
l.col <- adjustcolor("black", alpha.f=0.4)
lines(0:1, 0:1, col=adjustcolor("black", alpha.f=0.5),
lwd=3)
lines(c(0,0),
c(0,1), col = l.col)
lines(c(0,1),
c(0,0), col = l.col)
lines(c(1,1),
c(0,1), col = l.col)
lines(c(0,1),
c(1,1), col = l.col)
if(label.points == FALSE){
points(x = 1 - specificity,
y = sensitivity,
pch=20,
col=adjustcolor("darkblue", alpha.f=0.6))
}
### <NO THRESHOLD>
if(type == "cont"){
if(text){
text(x = 1 - specificity,
y = sensitivity,
labels = paste0(seq.vec[cutoff]),
cex=cex,
col=adjustcolor("black", alpha.f=0.6),
pos=4)
} else{
points(x = 1 - specificity,
y = sensitivity,
cex=cex,
col=adjustcolor("darkred", alpha.f=0.9),
pch=16)
}
} else{
if(text){
text(x = 1 - specificity,
y = sensitivity,
labels = paste0(seq.vec[cutoff]),
cex=cex,
col=adjustcolor("black", alpha.f=0.6),
pos=4)
} else{
points(x = 1 - specificity,
y = sensitivity,
cex=cex,
col=adjustcolor("darkred", alpha.f=0.9),
pch=16)
}
}
}
}
names(mod.gam1)
library(shinyapps)
shinyapps::setAccountInfo(
name="joebrew",
token="C4D0E22C484D74139A50EDE2BA1887F4",
secret="zbbeauXf53w0Qnpxcx1RREIdIUJAaRaVjZLcN/Id")
##################
# RUN
##################
setwd("c:/users/brewjr/documents/ShinyApps/powercalc")
library(shiny)
runApp()
setwd("c:/users/brewjr/documents/ShinyApps/powercalc")
library(shiny)
runApp()
library(shiny)
deployApp()
